version: '3.8'

services:

  # POST Database
  postgres:
    container_name: post-services-db
    image: postgres:14.2-alpine
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=room-db   #Database's Name
    ports:
      - '5432:5432'
    volumes:
      - post-db:/var/lib/postgresql/data

  # USER Database
  mongodb:
    container_name: user-services-db
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db


  # Post-services
  # NOTE : must be run after the postgres run already
  post-app:
    container_name: post-services-app
    build:
      context: ./post-services
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    depends_on:
      postgres:
        condition: service_started #Only started after postgres had started
    # For Development use only
    volumes:
      - ./post-services:/app

  # User-services
  user-app:
    container_name: user-services-app
    build:
      context: ./user-services
      dockerfile: Dockerfile
    ports:
      - 5000:5000
    depends_on:
      - mongodb
    # For Development use only
    command: sh -c "npm install && npm run dev" #This overrided Dockerfile CMD
    volumes:
      - ./user-services:/app

  # Content-Recommend-services
  content-recommend-app:
    container_name: content-recommend-services-app
    build:
      context: ./content-recommend-services
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    # For Development use only
    volumes:
      - ./content-recommend-services:/app

  # API Gateway
  api-gateway:
    build:
      context: ./client-API-gateway
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    depends_on:
      - post-app
      - user-app
      - content-recommend-app
    volumes:
      - ./client-API-gateway:/app

volumes:
  mongodb-data:
  post-db:
    driver: local